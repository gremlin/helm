{{ if .Values.gremlin.serviceAccount.create }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gremlin
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- with .Values.gremlin.serviceAccount.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gremlin-metadata-reader
rules:
  - apiGroups: [""]
    resources:
      - "nodes"
      {{- if .Values.gremlin.features.discoverDestinationService.enabled }}
      - "services"
      {{- end }}
    verbs: ["get"]
{{- if .Values.gremlin.features.discoverDestinationService.enabled }}
  - apiGroups: ["discovery.k8s.io"]
    resources: ["endpointslices"]
    verbs: ["list","watch"]
{{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gremlin-metadata-reader
subjects:
  - kind: ServiceAccount
    name: gremlin
    namespace: gremlin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gremlin-metadata-reader
{{ if .Values.gremlin.podSecurity.podSecurityPolicy.create }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: psp:gremlin
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs:     ['use']
  resourceNames:
  - gremlin
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default:gremlin
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: psp:gremlin
subjects:
- kind: ServiceAccount
  name: gremlin
  namespace: {{ .Release.Namespace }}
{{ end }}

{{ if .Values.gremlin.podSecurity.securityContextConstraints.create }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: scc:gremlin
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
rules:
- apiGroups: ['security.openshift.io']
  resources: ['securitycontextconstraints']
  verbs:     ['use']
  resourceNames:
  - gremlin
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default:gremlin
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: scc:gremlin
subjects:
- kind: ServiceAccount
  name: gremlin
  namespace: {{ .Release.Namespace }}
{{ end }}
{{ end }}
