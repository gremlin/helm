---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gremlin
  namespace: {{ .Release.Namespace }}
{{ if .Values.gremlin.podSecurity.podSecurityPolicy.create }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: psp:gremlin
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs:     ['use']
  resourceNames:
  - gremlin
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default:gremlin
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: psp:gremlin
subjects:
- kind: ServiceAccount
  name: gremlin
  namespace: {{ .Release.Namespace }}
{{ end }}

{{ if .Values.gremlin.podSecurity.securityContextConstraints.create }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: scc:gremlin
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
rules:
- apiGroups: ['security.openshift.io']
  resources: ['securitycontextconstraints']
  verbs:     ['use']
  resourceNames:
  - gremlin
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default:gremlin
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: scc:gremlin
subjects:
- kind: ServiceAccount
  name: gremlin
  namespace: {{ .Release.Namespace }}
{{ end }}