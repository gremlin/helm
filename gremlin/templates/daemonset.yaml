apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "gremlin.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "gremlin.name" . }}
    helm.sh/chart: {{ include "gremlin.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    version: v1
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "gremlin.name" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "gremlin.name" . }}
        helm.sh/chart: {{ include "gremlin.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        version: v1
      {{- if or .Values.gremlin.apparmor .Values.gremlin.podSecurity.seccomp.enabled }}
      annotations:
        {{- if .Values.gremlin.apparmor }}
        container.apparmor.security.beta.kubernetes.io/{{ .Chart.Name }}: {{ .Values.gremlin.apparmor }}
        {{- end }}
        {{- if .Values.gremlin.podSecurity.seccomp.enabled }}
        container.seccomp.security.alpha.kubernetes.io/{{ .Chart.Name }}: {{ .Values.gremlin.podSecurity.seccomp.profile }}
        {{- end }}
      {{- end }}
    spec:
      serviceAccountName: gremlin
      {{- if .Values.affinity }}
      affinity: {{ toYaml .Values.affinity | trimSuffix "\n" | indent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{ toYaml .Values.nodeSelector | trimSuffix "\n" | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{ toYaml .Values.tolerations | trimSuffix "\n" | nindent 8 }}
      {{- end }}
      hostPID: {{ .Values.gremlin.hostPID }}
      hostNetwork: {{ .Values.gremlin.hostNetwork }}
      {{- if and .Values.gremlin.podSecurity.seccomp.enabled (eq "localhost/gremlin" .Values.gremlin.podSecurity.seccomp.profile) }}
      initContainers:
        - name: seccomp-init
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - mountPath: {{ .Values.gremlin.podSecurity.seccomp.root }}
              name: seccomp-root
            - mountPath: /gremlin
              name: seccomp-profile
          command:
            - cp
            - /gremlin/seccomp.json
            - {{ .Values.gremlin.podSecurity.seccomp.root }}/gremlin
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        args: [ "daemon" ]
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.gremlin.resources }}
        resources: {{ toYaml .Values.gremlin.resources | nindent 10 }}
        {{- end }}
        securityContext:
          capabilities:
            add: {{ toYaml .Values.gremlin.podSecurity.capabilities | nindent 14 }}
        env:
          - name: GREMLIN_TEAM_ID
            {{- /* If we aren't managing this secret and a teamID was supplied, assume teamID is not in the external secret */}}
            {{- if (and (not .Values.gremlin.secret.managed) (default .Values.gremlin.teamID .Values.gremlin.secret.teamID)) }}
            value: {{ default .Values.gremlin.teamID .Values.gremlin.secret.teamID | quote }}
            {{- else }}
            valueFrom:
              secretKeyRef:
                name:  {{ include "gremlin.secretName" . }}
                key: GREMLIN_TEAM_ID
            {{- end }}

          {{- if (eq (include "gremlin.secretType" .) "secret") }}
          - name: GREMLIN_TEAM_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ include "gremlin.secretName" . }}
                key: GREMLIN_TEAM_SECRET
          {{- else }}
          - name: GREMLIN_TEAM_CERTIFICATE_OR_FILE
            value: file:///var/lib/gremlin/cert/gremlin.cert
          - name: GREMLIN_TEAM_PRIVATE_KEY_OR_FILE
            value: file:///var/lib/gremlin/cert/gremlin.key
          {{- end }}
          - name: GREMLIN_IDENTIFIER
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: GREMLIN_CLIENT_TAGS
            value: {{ .Values.gremlin.client.tags }}
          - name: GREMLIN_DOCKER_IMAGE
            value: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          {{- if .Values.gremlin.collect.processes }}
          - name: GREMLIN_COLLECT_PROCESSES
            value: "true"
          {{- end }}
          - name: GREMLIN_SERVICE_URL
            value: {{ include "gremlinServiceUrl" . }}
        volumeMounts:
          - name: gremlin-state
            mountPath: /var/lib/gremlin
            readOnly: false
          - name: gremlin-logs
            mountPath: /var/log/gremlin
            readOnly: false
          - name: cgroup-root
            mountPath: /sys/fs/cgroup
            readOnly: true
          - name: runtime-sock
            mountPath: {{ include "runtimeSocket" . }}
            readOnly: true
          - name: shutdown-trigger
            mountPath: /sysrq
          {{- if include "runtimeRunc" . }}
          - name: runtime-runc
            mountPath: {{ include "runtimeRunc" . }}
            readOnly: false
          {{- end }}
          {{- if (eq (include "gremlin.secretType" .) "certificate") }}
          - name: gremlin-cert
            mountPath: /var/lib/gremlin/cert
            readOnly: true
          {{- end }}
      volumes:
        - name: cgroup-root
          hostPath:
            path: {{ .Values.gremlin.cgroup.root }}
        - name: runtime-sock
          hostPath:
            path: {{ include "runtimeSocket" . }}
        {{- if include "runtimeRunc" . }}
        - name: runtime-runc
          hostPath:
            path: {{ include "runtimeRunc" . }}
        {{- end }}
        # The Gremlin daemon communicates with Gremlin sidecars via its state directory.
        # This should be shared with the Kubernetes host
        - name: gremlin-state
          hostPath:
            path: /var/lib/gremlin
        # The Gremlin daemon forwards logs from the Gremlin sidecars to the Gremlin control plane
        # These logs should be shared with the host
        - name: gremlin-logs
          hostPath:
            path: /var/log/gremlin
        - name: shutdown-trigger
          hostPath:
            path: /proc/sysrq-trigger
        {{- if (eq (include "gremlin.secretType" .) "certificate") }}
        - name: gremlin-cert
          secret:
            secretName: {{ include "gremlin.secretName" . }}
        {{- end }}
        {{- if and .Values.gremlin.podSecurity.seccomp.enabled (eq "localhost/gremlin" .Values.gremlin.podSecurity.seccomp.profile) }}
        - name: seccomp-root
          hostPath:
            path: {{ .Values.gremlin.podSecurity.seccomp.root }}
        - name: seccomp-profile
          configMap:
            name: {{ template "gremlin.fullname" . }}-seccomp
        {{- end }}
